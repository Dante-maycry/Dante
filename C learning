三角形
#include <stdio.h>
int main()
{
    int i, j, k;
    for(i=1; i<5; i++)
    {

        for( j=i;j<4 ;j++  )
        {
            printf(" ");
        }

        for(k=0;k<2*i-1;k++   )
        {
            printf("*");
        }
        printf("\n");
    }
    return 0;
}



99乘法表
#include <stdio.h>
int main()
{

    int i, j, result;
for(i=9;i>=1;i--)
    {
        for(j=1;j<=i;j++)

        {
            result=i*j;
            printf("%d*%d=%d\t",i,j,result);
        }
        printf("\n");
    }
    return 0;
}


输入
#include<stdio.h>
#define PI 3.14159
int main()
{
   double circum,area,r;
   scanf("%lf",&r);
   circum=2*r*PI;
   area=r*r*PI;
   printf("circum=%f,area=%f\n",circum,area);

 return 0;
}
数字互换
#include <stdio.h>
 
int main()
{
    int num[16], i;
    for(i=0; i<10; i++)
    {
        scanf("%d", &num[i]);
        num[i]=((num[i]%10)*100) + (num[i]/10%10*10) + (num[i]/100);
    }
    for(i=0; i<10; i++)
        printf("%d ", num[i]);
    return 0;
空心菱形
#include <stdio.h>
#include <stdlib.h>
int main()
{
    char c;
    c=getchar();
 int i,j;
    for(i = 0; i < 5; i++)
    {
        for(j = 0; j < 4 - i; j++)
        {
            printf(" ");
        }
        printf("%c",c);
        for(j = 0; j < 2 * i - 1; j++)
        {
            printf(" ");
        }
        if(i != 0)
        {
            printf("%c",c);
        }
        printf("\n");
    }


    for(i = 0; i < 4; i++)
    {
        for(j = 0; j < i + 1; j++)
        {
            printf(" ");
        }
        printf("%c",c);
        for(j = 0; j < 5 - 2 * i; j++)
        {
            printf(" ");
        }
        if(i != 3)
        {
            printf("%c",c);
        }
        printf("\n");
    }

    return 0;
}
百位个位互换输出
#include <stdio.h>
int main()
{
    int a,gw,bw,sw,g,b,r;
    scanf("%d",&a);
    if(a<1000&&a>99)
    {
        gw=a%10;
        r=a/10;
        sw=r%10;
        bw=r/10;
        b=gw;
        g=bw;
        r=b*100+sw*10+g;
        printf("%d",r);

    }
    return 0;
}


求根
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define P printf

int main()
{
    float a,b,c,d,x1,x2;
    scanf("%f %f %f",&a,&b,&c);
    d=pow(b,2)-4*a*c;
    if(a==0)
    {
        P("这不是一元二次方程");
    }
    else
    {
        if(d<0)
        {
            P("方程无实根");
        }
        else
        {
            x1=(-b+sqrt(d))/(2*a);
            x2=(-b-sqrt(d))/(2*a);
            P("%gx^2+%gx+%g=0的根是\nx1=%g\nx2=%g\n",a,b,c,x1,x2);
        }
    }
    return 0;
}

成绩
#include <stdio.h>
#include <stdlib.h>
#define P printf
#define C case
int main()
{
    float g;
    scanf("%f",&g);
    int k;
    int juDge(int x)
    {
        if(g<=100)
        {
            x=g/10;
        }
        else if(g>100)
        {
            x=(g/10)+1;
        }
    }

    switch(juDge(k))
    {
        C 10:
        C 9:
            P("成绩%g属于A等级",g);
            break;
        C 8:
            P("成绩%g属于B等级",g);
            break;
        C 7:
            P("成绩%g属于C等级",g);
            break;
        C 6:
            P("成绩%g属于D等级",g);
            break;
        C 5:
        C 4:
        C 3:
        C 2:
        C 1:
        C 0:
            P("成绩%g属于E等级",g);
            break;
    default:
            P("请输入0-100以内的数");
            break;

    }
    return 0;
}
某正整数内所有质数
#include <stdio.h>
#include <stdlib.h>
#define P printf

int main()
{
    int n,i,j;
    scanf("%d",&n);
    if (n<=1)
    {
        P("请输入大于1的正整数");
    }
    else if(n>1)
    {
        for(i=1; i<=n; i++)
        {
            for(j=2; j<=n; j++)
            {
                if(i%j==0)

                    break;
            }
            if(i==j)

                P("%d\n",i);

        }
    }
    return 0;
}
实心菱形
#include <stdio.h>

int main()
{
    int n,i,j,k;
    scanf("%d",&n);
    for(i=1;i<=n;i++)//上半部分
    {
        for(j=1;j<=n-i;j++)
        {
            printf(" ");
        }
        for(k=1;k<=2*i-1;k++)
        {
            printf("*");
        }
        printf("\n");
    }
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=i;j++)
        {
            printf(" ");
        }
        for(k=1;k<=(2*(n-i)-1);k++)
        {
            printf("*");
        }
        printf("\n");
    }
    return 0;

}
实心菱形2
#include<stdio.h>
#include<math.h>

int main()
{
    int i,j,k;
    for(i=1;i<=2*5-1;i++)
    {
        for(k=1;k<=abs(i-5);k++)
        {
            printf(" ");
        }
        for(j=1;j<=2*(5-abs(i-5))-1;j++)
        {
            printf("*");
        }
        printf("\n");
    }
    return 0;
}

平行四边形
#include <stdio.h>

int main()
{
    int n,i,k,j;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        for(k=1;k<i;k++)
        {
            printf(" ");
        }
        for(j=1;j<=n;j++)
        {
            printf("*");
        }
        printf("\n");
    }
    return 0;

}
梯形
#include <stdio.h>

int main()
{
    int n,i,j,k,l;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        for(j=1;j<i;j++)
        {
            printf(" ");
        }
        l=((n-i)*2+n);
        for(k=1;k<=l;k++)
        {
            printf("*");
        }
        printf("\n");
    }
    return 0;

}
爱心
#include <stdio.h>
#include <math.h>

int main() 
{

    for (float y = 1.3; y >= -1.1; y -= 0.06)
    {
        for (float x = -1.2; x <= 1.2; x += 0.025)
        {
            if (pow((x * x + y * y - 1.0), 3) - x * x * y * y * y <= 0.0)
                printf(" ");
            else
                printf("*");
        }
        printf("\n");
    }

    return 0;
}
角谷定理
#include <stdio.h>

int main()
{
    int n,i;
    i=1;
    scanf("%d",&n);
    printf("%d ",n);
    while(n>=2)
    {
        if(n%2==0)
        {
            n=n/2;
            printf("%d ",n);
        }
        else if(n%2!=0)
        {
            n=n*3+1;
            printf("%d ",n);
        }
        i++;
    }
    printf("\nSTEP=%d",i);
    return 0;
}
求各位数和
#include <stdio.h>
#include <math.h>

int main()
{
    int num,sum,m;
    sum=0;
    m=0;
    scanf("%d",&num);
    num=fabs(num);
    while(num!=0)
    {
        m=num%10;
        sum +=m;
        num/=10;

    }
    printf("%d\n",sum);

    return 0;
}

输入一个正整数，计算1到这个正整数（含）之间所有7的倍数或个位数是7的数之和
#include <stdio.h>
#include <math.h>

int main()
{
    int num,sum,m;
    sum=0;
    m=0;
    scanf("%d",&num);
    for(m=1;m<=num;m++)
    {
        if(m%7==0&&m%10!=7) //7的倍数
        {
            sum+=m;
        }
        else if(m%10==7)    //尾数是7的数
        {
            sum+=m;
        }
    }

    printf("%d\n",sum);
    return 0;
}
6.4 编程实现从键盘任意输入20个整数，统计非负数个数，并计算非负数之和。
输出格式（冒号用英文字符）：
非负数个数:非负数之和
#include <stdio.h>
#include <math.h>

int main()
{
    int i,j=0;
    int sum=0;
    int num[20];
    for(i=0;i<=19;i++)
    {
        scanf("%d",&num[i]);
    }
    for(i=0;i<=19;i++)
    {
        if(num[i]>=0)
        {
           j++;
           sum+=num[i];
        }
        else if(num[i]<0){
        }
    }
    printf("%d:%d",j,sum);
    return 0;
}




猴子找大王n只猴子从1开始报数 到m淘汰 剩下的猴子重新排列报数 到m淘汰 直到剩下最后一只猴子
#include<stdio.h>
int main()
{
 int n,m,i,j,k,a[300];//n为猴子数
 scanf("%d%d",&n,&m);
 for(i=0;i<n;i++)//将猴子排序
  a[i]=i+1;
 i=0;
 j=0;
 k=0;
 while(j<n-1)//剩下的最后一只猴子为猴王
 {
  if(a[i]!=0)//开始报数
   k++;
  if(k==m)//将猴子淘汰
  {
   printf("%d ",a[i]);//淘汰的猴子
   a[i]=0;
   j++;
   k=0;//从1开始报数
  }
  i++;
  if(i==n)//从头开始报数
   i=0;
 }
 for(i=0;i<n;i++)//找出猴王
  if(a[i]!=0)
   printf("%d\n",a[i]);
 return 0;
}






求1-1/3+1/5...........
#include<stdio.h>

int main()
{
    float j=1,sum=0;
    int i=1;
    while(j>1e-6)
    {
       j=1.0/(2*i-1);
       sum+=pow(-1,i-1)*(1.0/(2*i-1));
       i++;
    }
    printf("%f",sum);
	return 0;
}


置换最大最小值
#include<stdio.h>
#include<math.h>

int main()
{
    int a[10]={0};
    int i, Max=0,Min;
    int j,k;
    for(i=0;i<10;i++)
    {
        scanf("%d",&a[i]);
        Min=a[9];
    }
    for(i=0;i<10;i++)
    {
        if(a[i]>Max)
        {
            Max=a[i];
            j=i;
        }
        if(a[i]<Min)
        {
            Min=a[i];
            k=i;
        }
    }
    for(i=0;i<10;i++)
    {
        if(i==j)
        {
            printf("%d ",a[k]);
        }
        else if(i==k)
        {
            printf("%d ",a[j]);
        }
        else
        {
            printf("%d ",a[i]);
        }
    }



    return 0;
}


二分法求根
#include<stdio.h>
#include<math.h>

double f(double x);
const double eps = 1e-6; //定义我们计算的精度

int main()
{
	double x0,x1=0,x2=0,fx0;//[x1,x2]为寻找区间，x0为中点,浮点型数据
    scanf("%lf %lf",&x1, &x2);

    if(f(x1)*f(x2)<0)
    {
        while(fabs(x2-x1)>eps)
        {
          x0=(x1+x2)/2.0;//取x1,x2的中点
          fx0=f(x0);
          if(fabs(fx0)<eps)//满足精确度
               break;
          else if(f(x0)*f(x1)<0)
          {
              x2=x0; //修正区间，将[x1,x2]换成[x1,x0],这里的x0是中点
          }
          else if(f(x0)*f(x2)<0)
          {
              x1=x0;//修正区间，将[x1,x2]换成[x0,x2],这里的x0是中点
          }
        }
    }
	else{
		//可以放入其他求方程的根的方法
	}

	printf("最终缩小到区间：%lf  %lf",x1,x2);
    x0=(x1+x2)/2;
    printf("\n该方程组的近似根为:x*=%lf\n",x0);

    return 0;
}
double f(double x) //定义函数(方程)
{
	return exp(x)*log(x)-x*x;
}

冒泡排序
#include <stdio.h>

#include <math.h>
int main()
{
    int a[15]={0};
    int i=1;
    for(i=1;i<=15;i++)
    {
        scanf("%d",&a[i]);
    }
    int j,k,mid;
    for(i=0;i<=14;i++)
    {
        for(j=0;j<=14-i;j++)
        {
            if(a[j]>a[j+1])
            {
                mid=a[j];
                a[j]=a[j+1];
                a[j+1]=mid;
            }
        }
    }
    for(i=0;i<=14;i++)
    {
        printf("%d ",a[i]);
    }


}
二进制输出
1
#include <stdio.h>

#include <math.h>
int Duomain(int n);

int main()
{
    int a;
    scanf("%d",&a);
    printf("%d",Duomain(a));
}
int Duomain(int n)
{
    int i,j,k;
    i=1;
    j=1;
    k=0;
    while(n!=0)
    {
        i=n%2;
        k+=i*j;
        j*=10;
        n=n/2;
    }
    return k;
}







